# Scaffolding generated by Casein v.3.1.7

module Casein
  class AppsController < Casein::CaseinController
    layout 'casein_appdata_main'
  
    ## optional filters for defining usage according to Casein::Users access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Apps'
  		
  		@platform = params[:platform] || "naver"
  		limit = params[:limit] || 20
      ranks = []

      @graphData = []
      orderType = ""
      if @platform == "naver" 
        orderType = params[:orderType] || "POPULARITY"
        ranks = Rank.find(:all, 
          :limit=>limit, 
          :order => "rank ASC", 
          :conditions=>["orderType=? and created_at > ?", orderType, 1.days.ago])
      else # @platform == "nate" 
        orderType = params[:orderType] || "1"
        ranks = Rank.find(:all, 
          :limit=>limit, 
          :order => "rank ASC", 
          :conditions=>["orderType=? and created_at > ?", orderType, 1.days.ago])
      end

      ranks.each do |r|
        obj =  {
          :label=>r.app.name,
          :data=>[]
        }

        if orderType == "1" || orderType == "POPULARITY" 
          r.app.ranks.hot.each do |r|
            obj[:data] << [r.created_at.localtime.to_time.to_i*1000, r.rank]
          end
        else
          r.app.ranks.install.each do |r|
            obj[:data] << [r.created_at.localtime.to_time.to_i*1000, r.rank]
          end
        end
        @graphData << obj
      end

      @graphOptions = {
        :series => {
            :lines => { :show => true },
            :points => { :show => true }
        },
        :legend => { :noColumns => 3},
        :xaxis => {
          :mode => "time",
          :tickSize => [1, "day"],
          :timeformat => "%y/%m/%d"
        },
        :grid => { 
          :hoverable => "true",
          :clickable => "true"
        },
        :selection => { :mode => "x" }
      }

      # var options = {
      #     series: {
      #         lines: { show: true },
      #         points: { show: true }
      #     },
      #     legend: { noColumns: 2 },
      #     xaxis: { tickDecimals: 0 },
      #     yaxis: { min: 0 },
      #     selection: { mode: "x" }
      # };
      # 

      @apps
      if @platform == "naver"
        @apps = App.naver.paginate :page => params[:page]
      else #"nate"
        @apps = App.nate.paginate :page => params[:page]
      end

      respond_to do |format|
        format.html # index.html.erb
        format.xml  { render :xml => @apps }
      end
      
      
    end
  
    def show
      @casein_page_title = 'View app'
      # @app = App.find params[:id]

      @app = App.find(params[:id])

      @rankData = []
      orderType = params[:orderType] || ((@app.platform == "nate")? "1" : "POPULARITY")

      @app.ranks.find(:all, :conditions=>{:orderType=>orderType}).each do |r|
        @rankData << [r.created_at.localtime.to_time.to_i*1000, r.rank]
      end

      @graphOptions = {
        :series => {
            :lines => { :show => true },
            :points => { :show => true }
        },
        :legend => { :noColumns => 3},
        :xaxis => {
          :mode => "time",
          :tickSize => [1, "day"],
          :timeformat => "%y/%m/%d"
        },
        :grid => { 
          :hoverable => "true",
          :clickable => "true"
        },
        :selection => { :mode => "x" }
      }

      respond_to do |format|
        format.html # show.html.erb
        format.xml  { render :xml => @app }
      end
    end
 
    def new
      @casein_page_title = 'Add a new app'
    	@app = App.new
    end

    def create
      @app = App.new params[:app]
    
      if @app.save
        flash[:notice] = 'App created'
        redirect_to casein_apps_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new app'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update app'
      
      @app = App.find params[:id]
    
      if @app.update_attributes params[:app]
        flash[:notice] = 'App has been updated'
        redirect_to casein_apps_path
      else
        flash.now[:warning] = 'There were problems when trying to update this app'
        render :action => :show
      end
    end
 
    def destroy
      @app = App.find params[:id]

      @app.destroy
      flash[:notice] = 'App has been deleted'
      redirect_to casein_apps_path
    end
  
  end
end